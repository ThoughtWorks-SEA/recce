name: Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: ASDF setup
        uses: asdf-vm/actions/setup@v1
      - name: ASDF Cache
        id: asdf-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.ASDF_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}
      - name: ASDF tool install
        uses: asdf-vm/actions/install@v1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      - name: Set JAVA_HOME from ASDF
        run: echo "JAVA_HOME=$(dirname $(dirname $(asdf which java)))" >> $GITHUB_ENV
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        with:
          arguments: build
      - name: Build Docker image locally with Gradle
        uses: gradle/gradle-build-action@v2
        if: ${{ !endsWith(github.ref, '/master') }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        with:
          arguments: jibDockerBuild
      - name: Build & push docker image with Gradle
        uses: gradle/gradle-build-action@v2
        if: ${{ endsWith(github.ref, '/master') }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        with:
          arguments: jib
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: build/reports/tests/test
